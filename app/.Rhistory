mean[i] <- sum(this_data2 == "yes")/M[i]
}
mean
school <- levels(as.factor(A$school))
percentage <- c(); m <- c()
for (i in 1:length(school)) {
this_data1 <- A[A$school == school[i],]$returnf
this_data2 <- na.omit(A[A$school == school[i],]$returnf)
M[i] <- length(this_data1)
percentage[i] <- sum(this_data2 == "yes")/M[i]
}
percentage
N <- 9962; n <- norw(A)
N <- 9962; n <- nrow(A)
A <- books
boxplot(A$purchase ~ A$shelf)
t_unb <- N / n * sum(A$purchase)
t_unb <- N / n * sum(A$purchase)
(t_unb <- N / n * sum(A$purchase))
?books
shelf <- levels(A$shelf)
y <- c()
for (i in 1:12) {
this_data <- A[A$shelf == shelf[i],]$purchase
y[i] <- mean(this_data)
}
y
A <- books
boxplot(A$purchase ~ A$shelf, main = "The purchase cost of books on each shelf")
shelf <- levels(A$shelf)
shelf
shelf <- levels(as.factor(A$shelf))
y <- c()
for (i in 1:12) {
this_data <- A[A$shelf == shelf[i],]$purchase
y[i] <- mean(this_data)
}
y
y <- c(); Si <- c()
for (i in 1:12) {
this_data <- A[A$shelf == shelf[i],]$purchase
y[i] <- mean(this_data)
Si[i] <- var(this_data)
}
Si
SSTO <- sum((A$purchase - mean(A$purchase))^2)
SSW/SSTO
y <- c(); Si <- c()
for (i in 1:12) {
this_data <- A[A$shelf == shelf[i],]$purchase
y[i] <- mean(this_data)
Si[i] <- var(this_data)
}
SSW <- sum(Si * (m-1))
SSTO <- sum((A$purchase - mean(A$purchase))^2)
SSW/SSTO
SSW
SSW <- sum(Si * (m-1))
SSW
SI
Si
m-1
m
m <- rep(5, 12)
N <- 44; n <- 12; m <- rep(5, 12);
m
SSW <- sum(Si * (m-1))
SSW
SSW/SSTO
SSB <- sum(m * (y - y_r)^2)
SSW <- sum(Si * (m-1))
SSB <- sum(m * (y - mean(A$purchase))^2)
SSW <- sum(Si * (m-1))
SSTO <- sum((A$purchase - mean(A$purchase))^2)
SSB+SSW=SSTO
SSB+SSW==SSTO
df <- c(n-1, n*(m-1), n*m-1)
df
N <- 44; n <- 12; m <- 5;
df <- c(n-1, n*(m-1), n*m-1)
df
c1 <- 10; c2 <- 4; M <- 30
m_opt <- sqrt(c1 * M * (N-1) * (1 - Ra) / (c2 * (N*M - 1) * Ra))
B <- measles
school <- levels(as.factor(B$school))
percentage <- c(); m <- c()
for (i in 1:length(school)) {
this_data1 <- B[B$school == school[i],]$returnf
this_data2 <- na.omit(B[B$school == school[i],]$returnf)
m[i] <- length(this_data1)
percentage[i] <- sum(this_data2 == "yes")/m[i]
}
percentage
w <- N/n * M/m
w
consent <- c()
for (i in i:nrow(B)) {
if (B$consent == "yes") {consent[i] = 1}
else {consent = 0}
}
consent
consent <- c()
for (i in i:nrow(B)) {
if (B$consent == "yes") {consent[i] = 1}
else {consent[i] = 0}
}
consent <- c()
for (i in i:nrow(B)) {
if (B$consent[i] == "yes") {consent[i] = 1}
else {consent[i] = 0}
}
consent
for (i in i:nrow(B)) {
if (B$consent[i] == "yes") {consent[i] = 1}
else {consent[i] = 0}
}
consent
i=1
if (B$consent[i] == "yes") {consent[i] = 1}
else {consent[i] = 0}
consent <- c()
for (i in 1:nrow(B)) {
if (B$consent[i] == "yes") {consent[i] = 1}
else {consent[i] = 0}
}
B$consent=="yes"
nrow(B)
length(B$consent)
p_consent <- c(); m <-c()
for (i in 1:length(school)) {
this_data1 <- B[B$school == school[i],]$consent
this_data2 <- na.omit(B[B$school == school[i],]$consent)
m[i] <- length(this_data1)
p_consent[i] <- sum(this_data2 == "yes")/m[i]
}
p_consent
consent <- rep(0, nrow(B))
consent <- rep(0, nrow(B))
for (i in 1:nrow(B)) {
if (B$consent[i] == "yes") {consent[i] = 1}
else {consent[i] = consent[i]}
}
consent <- rep(0, nrow(B))
new_data <- na.omit(data.frame(1:nrow(B), B$consent))
View(new_data)
consent <- rep(0, nrow(B))
new_data <- na.omit(data.frame(1:nrow(B), B$consent))
for (i in 1:nrow(new_data)) {
if (new_data[i,2] == "yes") {k <- new_data[i,1]; consent[k] = 1}
else {k <- new_data[i,1]; consent[k] = 0}
}
p <- sum(na.omit(B$consent == "yes")) / nrow(B)
p
p_consent
names(new_data) <- c("school", "consent")
View(new_data)
consent <- rep(0, nrow(B))
new_data <- na.omit(data.frame(1:nrow(B), B$consent))
for (i in 1:nrow(new_data)) {
if (new_data[i,2] == "yes") {k <- new_data[i,1]; consent[k] = 1}
else {k <- new_data[i,1]; consent[k] = 0}
}
names(new_data) <- c("school", "consent")
p_consent <- c(); m <-c(); Si <- c(); p <- 0
for (i in 1:length(school)) {
this_data <- new_data[new_data$school == school[i],]$consent
m[i] <- length(this_data)
p_consent[i] <- sum(this_data == "yes") / m[i]
Si[i] <- var(this_data)
}
i=1
this_data <- new_data[new_data$school == school[i],]$consent
m[i] <- length(this_data)
m
this_data
View(new_data)
consent <- rep(0, nrow(B))
new_data <- na.omit(data.frame(1:nrow(B), B$consent))
for (i in 1:nrow(new_data)) {
if (new_data[i,2] == "yes") {k <- new_data[i,1]; consent[k] = 1}
else {k <- new_data[i,1]; consent[k] = 0}
}
consent
names(new_data) <- c("school", "consent")
p_consent <- c(); m <-c(); Si <- c(); p <- 0
for (i in 1:length(school)) {
this_data <- new_data[new_data$school == school[i],]$consent
m[i] <- length(this_data)
p_consent[i] <- sum(this_data == "yes") / m[i]
Si[i] <- var(this_data)
}
p_consent <- c(); m <-c(); Si <- c(); p <- 0
i=1
this_data <- new_data[new_data$school == school[i],]$consent
this_data
consent <- rep(0, nrow(B))
new_data <- na.omit(data.frame(1:nrow(B), B$consent))
for (i in 1:nrow(new_data)) {
if (new_data[i,2] == "yes") {k <- new_data[i,1]; consent[k] = 1}
else {k <- new_data[i,1]; consent[k] = 0}
consent <- rep(0, nrow(B))
new_data <- na.omit(data.frame(1:nrow(B), B$consent))
for (i in 1:nrow(new_data)) {
if (new_data[i,2] == "yes") {k <- new_data[i,1]; new_data[k,2] = 1}
else {k <- new_data[i,1]; new_data[k,2] = 0}
}
View(new_data)
View(new_data)
View(A)
View(A)
A <- books
View(A)
A <- books
View(A)
View(A)
View(A)
View(A)
712/(712+291)
714/(714+291)
0.7104478-0.7098704
(1.96/0.05)^2
ceil\(1.96/0.05)^2
ceiling(1.96/0.05)^2
ceiling((1.96/0.05)^2)
pt(1.087,7)
pt(4.319,7)
pt(4.319,7)*@
pt(4.319,7)*2
2-pt(4.319,7)*2
2-2*pt(1.087,7)
pt(-1.087,7)
pt(-1.087,7)*2
1-8.865/22.309
1-8.865/26.309
(.014*.6186^2+.42*.0126^2+2+.074*.6186*.126)/(.421*.014-.074^2)
(.014*.6186^2+.42*.0126^2+2.074*.6186*.126)/(.421*.014-.074^2)
(.014*.6186^2+.42*.0126^2+2*.074*.6186*.126)/(.421*.014-.074^2)
(.014*.616^2+.421*.013^2+2*.074*.616*.13)/(.421*.014-.074^2)
(.014*.616^2+.421*.013^2-2*.074*.616*.13)/(.421*.014-.074^2)
(.014*.6186^2+.42*.0126^2-2*.074*.6186*.126)/(.421*.014-.074^2)
7/2*40.57/9.366
pt(6.23,7)*2
pt(-6.23,7)*2
?pf
pf(6.23,2,7)
pf(-6.23,2,7)*2
pf(-6.23,2,7)
2-2*pf(6.23,2,7)
1-pf(6.23,2,7)
1-pf(15.161,2,7)
pf(4.871,2,10)
pf(4.871,10,2)
pf(4.871,2,10)
1-pf(4.871,2,10)
df(0.05,2,27)
qf(0.05,2,27)
qf(0.95,2,27)
dgamma(2.281,2,0.5)
dgamma(2.281,1.5,0.5)
dgamma(2.281,4,0.5)
dgamma(2.281,2.5,0.5)
dgamma(2.281,3,0.5)
pgamma(2.281,1,0.5)
pgamma(2.281,2,0.5)
pgamma(2.281,0.5,0.5)
1-pgamma(2.281,0.5,0.5)
qnorm(0.0125)
Sys.setenv(MAKEFLAGS = "-j4")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
require(rstan)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
factorial(7000)/factorial(3000)/factorial(4000)
.36*.48^2/2+.36*.48/2*.16+.48^3/2+.48^2/2*.16
.36*.48^2/2/4+.36*.48/2*.16/2+.48^3/2/4+.48^2/2*.16/2
0.04032/0.129024
0.3125*2
*@
0.3125*2
0.3125*4
0.3125*8
0.3125*16
rpois(1,10)
rpois(1,10)
rpois(1,10)
rpois(1,10)
E <- c(0, 0, 0)
E[1]=1&E[2]=1&E[3]=1
E[1]=1
E[1]==1&E[2]==1&E[3]==1
E=1
E <- c(0, 0, 0)
E==1
E>1
(E>1) == FALSE
W <- c()
W
Time <- 0
E <- c(0, 0, 0)
W <- c()
while (Time <= 420) {
A <- rpois(1, 10)
B <- runif(1, 5, 25)
Time <- Time + A
if ( min(E) > Time) {
W <- c(W, min(E)-Time)
E[which.min(E)] <- Time + B
}
else {
E[which.min(E)] <- Time + B
W <- c(W, 0)
}
}
W
Time
ceiling(1.5)
Time <- 0
E <- c(0, 0, 0)
W <- c()
Arrive <- c()
Doc <- c()
Leave <- c()
while (Time <= 420) {
A <- rpois(1, 10)
B <- ceiling(runif(1, 5, 25))
Time <- Time + A
if ( min(E) > Time) {
W <- c(W, min(E)-Time)
D <- which.min(E)
E[D] <- Time + B
}
else {
D <- which.min(E)
E[D] <- Time + B
W <- c(W, 0)
}
Arrive <- c(Arrive, Time)
Doc <- c(Doc, D)
Leave <- c(Leave, B)
}
cbind(Arrive, Doc, Leave, W)
Time <- 0
E <- c(0, 0, 0)
W <- c()
Arrive <- c()
Doc <- c()
Leave <- c()
while (Time <= 420) {
A <- rpois(1, 10)
B <- ceiling(runif(1, 5, 25))
Time <- Time + A
if ( min(E) > Time) {
W <- c(W, min(E)-Time)
D <- which.min(E)
E[D] <- Time + B
}
else {
D <- which.min(E)
E[D] <- Time + B
W <- c(W, 0)
}
Arrive <- c(Arrive, Time)
Doc <- c(Doc, D)
Leave <- c(Leave, Time + B)
}
cbind(Arrive, Doc, Leave, W)
length(W>0)
W>0
sum(W>0)
W[W>0]
Time
Time+B-420
Patient <- function(){
Time <- 0
E <- c(0, 0, 0)
W <- c()
Arrive <- c()
Doc <- c()
Leave <- c()
while (Time <= 420) {
A <- rpois(1, 10)
B <- ceiling(runif(1, 5, 25))
Time <- Time + A
if ( min(E) > Time) {
W <- c(W, min(E)-Time)
D <- which.min(E)
E[D] <- Time + B
}
else {
D <- which.min(E)
E[D] <- Time + B
W <- c(W, 0)
}
Arrive <- c(Arrive, Time)
Doc <- c(Doc, D)
Leave <- c(Leave, Time + B)
}
cbind(Arrive, Doc, Leave, W)
return(c(length(W), sum(W>0), mean(W[W>0]), max(W), Time+B-420))
}
Patient()
Patient <- function(){
Time <- 0
E <- c(0, 0, 0)
W <- c()
Arrive <- c()
Doc <- c()
Leave <- c()
while (Time <= 420) {
A <- rpois(1, 10)
B <- ceiling(runif(1, 5, 25))
Time <- Time + A
if ( min(E) > Time) {
W <- c(W, min(E)-Time)
D <- which.min(E)
E[D] <- Time + B
}
else {
D <- which.min(E)
E[D] <- Time + B
W <- c(W, 0)
}
Arrive <- c(Arrive, Time)
Doc <- c(Doc, D)
Leave <- c(Leave, Time + B)
}
cbind(Arrive, Doc, Leave, W)
if (sum(W>0) == 0) {M <- 0}
else {M <- mean((W[W>0]))}
return(c(length(W), sum(W>0), M, max(W), Time+B-420))
}
Patient()
result <- matrix(nrow = 2000, ncol = 5)
for (i in 1:2000) {
result[i, ] <- Patient
}
Patient
Patient
Patient()
for (i in 1:2000) {
result[i, ] <- Patient()
}
summary(result)
summary(result)[1,]
head(result)
Min <- c(min(R[,1]), min(R[,2]), min(R[,3]), min(R[,4]), min(R[,5]))
Median <- c(median(R[,1]), median(R[,2]), median(R[,3]), median(R[,4]), median(R[,5]))
Max <- c(max(R[,1]), max(R[,2]), max(R[,3]), max(R[,4]), max(R[,5]))
R <- matrix(nrow = 2000, ncol = 5)
for (i in 1:2000) {
R[i, ] <- Patient()
}
Min <- c(min(R[,1]), min(R[,2]), min(R[,3]), min(R[,4]), min(R[,5]))
Median <- c(median(R[,1]), median(R[,2]), median(R[,3]), median(R[,4]), median(R[,5]))
Max <- c(max(R[,1]), max(R[,2]), max(R[,3]), max(R[,4]), max(R[,5]))
cbind(Min, Median, Max)
mean(R[,2]==0)
mean(R[,5]==0)
mean(R[,5]>30)
-0.5*log(0.5)*2
-0.1*log(0.1)-0.9*log(0.9)
log(1)
-0.1*log10(0.1)-0.9*log10(0.9)
-0.5*log10(0.5)*2
-0.5*log10(0.5)-0.5*log10(0.5)
-0.1*log10(0.1)-0.9*log10(0.9)
log(1-2)
log(3-2)
log(3-1)
log(5-3)
log(5)/log(3)
plot(cars)
install.packages("dplyr")
install.packages("readr")
install.packages("DT")
tibble(x = 1:3, y = list(1:5, 1:10, 1:20))
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
tibble(x = 1:3, y = list(1:5, 1:10, 1:20))
install.packages("tibbles")
?tibbles
?tibble\
?tibble
tibble(a, b = a * 2)
library("DT")
library("dplyr")
tibble(a, b = a * 2)
tibble(x = 1:3, y = list(1:5, 1:10, 1:20))
y
A <- tibble(x = 1:3, y = list(1:5, 1:10, 1:20))
A
A["y"]
A["y"][1]
a <- 1:5
tibble(a, b = a * 2)
tibble(a, b = a * 2, c = 1)
tibble(x = runif(10), y = x * 2)
y = list(1:5, 1:10, 1:20)
y
Doc <- read.csv("Physician_Compare_NY.csv")
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/data")
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/app")
rsconnect::setAccountInfo(name='project2group9',
token='237BFF15C34673F6B9B5BCD7658C3B17',
secret='daA/zuRiUHjeb/1T7UuzIdQ19oumgwwsYXSl6yEP')
source("help_func.R",local=T)
source("HospitalMap.R",local=T)
source("Plot.R",local=T)
shiny::runApp('~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/app_n')
library(rsconnect)
rsconnect::deployApp('~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/app')
