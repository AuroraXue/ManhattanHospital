url.sourcecode <- 'dummy url'
info <- list(
br(),
h4('NYC Hospital Care Outcomes- ShinyApp'),
p('About:'),
br(),
p('Looking At Mortality and Readmission Rates in NYC Hospitals.'),
hr(),
br(),
tag('ul', list(
tag('li', list('Date', a(href=url.data, url.data))),
tag('li', list('To Find Under', strong('CSV Flat Files - Revised'))) #,
)),
br(),
p('This Shiny App Was Made For Applied STATGU 5243 At Columbia University'),
#p('link zu Sourcecode - GitHub:'),
#p(a(url.sourcecode, href=url.sourcecode)),
hr(),
p('Reference', a('Shiny RStudio', href='http://shiny.rstudio.com/'))
)
complications<-read.csv("Complications_Manhattan.csv")
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp")
complications<-read.csv("Complications_Manhattan.csv")
new_complications<-as.data.frame(matrix(NA,ncol=length(levels(complications$Measure.Name)),nrow=length(levels(complications$Hospital.Name))))
colnames(new_complications)<-levels(complications$Measure.Name)
colnames(new_complications)
rownames(new_complications)<-levels(complications$Hospital.Name)
for(i in rownames(new_complications)){
for(j in colnames(new_complications)){
new_complications[i,j]=complications$Score[complications$Hospital.Name==i&complications$Measure.Name==j]
}
}
new_complications<-new_complications[,-4]
new_complications<-apply(new_complications,2,order)
rownames(new_complications)<-levels(complications$Hospital.Name)
averageNYCperformance<-rep(6,ncol(new_complications))
new_complications=rbind(new_complications,averageNYCperformance)
library(fmsb)
BELLEVUE_HOSPITAL_CENTER<-new_complications["BELLEVUE HOSPITAL CENTER",]
BELLEVUE_HOSPITAL_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , BELLEVUE_HOSPITAL_CENTER))
radarchart( BELLEVUE_HOSPITAL_CENTER  , axistype=1 ,
#custom polygon
pcol=rgb(0.2,0.5,0.5,0.9) , pfcol=rgb(0.2,0.5,0.5,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "BELLEVUE HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3:Best Performance","3-6:Below Average","6-9:Above Average","9-12:Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
HARLEM_HOSPITAL_CENTER<-new_complications["HARLEM HOSPITAL CENTER",]
HARLEM_HOSPITAL_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , HARLEM_HOSPITAL_CENTER))
radarchart( HARLEM_HOSPITAL_CENTER  , axistype=1 ,
#custom polygon
pcol=rgb(0.9,0.6,0.5,0.9) , pfcol=rgb(0.7,0.5,0.5,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "HARLEM HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
HOSPITAL_FOR_SPECIAL_SURGERY<-new_complications["HOSPITAL FOR SPECIAL SURGERY",]
HOSPITAL_FOR_SPECIAL_SURGERY=as.data.frame(rbind(rep(11,10) , rep(0,10) , HOSPITAL_FOR_SPECIAL_SURGERY))
radarchart( HOSPITAL_FOR_SPECIAL_SURGERY  , axistype=1 ,
#custom polygon
pcol=rgb(0.2,0.3,0.5,0.9) , pfcol=rgb(0.2,0.2,0.5,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "HARLEM HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
LENOX_HILL_HOSPITAL<-new_complications["LENOX HILL HOSPITAL",]
LENOX_HILL_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , LENOX_HILL_HOSPITAL))
radarchart( LENOX_HILL_HOSPITAL , axistype=1 ,
#custom polygon
pcol=rgb(0.9,0.8,0.5,0.9) , pfcol=rgb(0.9,0.8,0.6,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "LENOX HILL HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
METROPOLITAN_HOSPITAL_CENTER<-new_complications["METROPOLITAN HOSPITAL CENTER",]
METROPOLITAN_HOSPITAL_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , METROPOLITAN_HOSPITAL_CENTER))
radarchart( METROPOLITAN_HOSPITAL_CENTER , axistype=1 ,
#custom polygon
pcol=rgb(0.9,0.6,1,0.9) , pfcol=rgb(0.9,0.8,0.9,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "METROPOLITAN HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS<-new_complications["MOUNT SINAI BETH ISRAEL/PETRIE CAMPUS",]
MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS=as.data.frame(rbind(rep(11,10) , rep(0,10) , MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS))
radarchart( MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS , axistype=1 ,
#custom polygon
pcol=rgb(0.6,0.2,0.4,0.9) , pfcol=rgb(0.6,0.2,0.2,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "METROPOLITAN HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
MOUNT_SINAI_HOSPITAL<-new_complications["MOUNT SINAI HOSPITAL",]
MOUNT_SINAI_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , MOUNT_SINAI_HOSPITAL))
radarchart( MOUNT_SINAI_HOSPITAL , axistype=1 ,
#custom polygon
pcol=rgb(0.5,0.6,1,0.9) , pfcol=rgb(0.5,0.8,1,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "MOUNT SINAI HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
EYE_EAR_INFIRMARY<-new_complications["N Y EYE AND EAR INFIRMARY",]
EYE_EAR_INFIRMARY=as.data.frame(rbind(rep(11,10) , rep(0,10) , EYE_EAR_INFIRMARY))
radarchart( EYE_EAR_INFIRMARY , axistype=1 ,
#custom polygon
pcol=rgb(0.1,0,0.9,0.9) , pfcol=rgb(0.1,0.2,1,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "New York EYE & EAR INFIRMARY COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
NEW_YORK_PRESBYTERIAN_HOSPITAL<-new_complications["NEW YORK-PRESBYTERIAN HOSPITAL",]
NEW_YORK_PRESBYTERIAN_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , NEW_YORK_PRESBYTERIAN_HOSPITAL))
radarchart( NEW_YORK_PRESBYTERIAN_HOSPITAL , axistype=1 ,
#custom polygon
pcol=rgb(0.1,0,0.1,0.9) , pfcol=rgb(0.1,0,0.3,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "NEW YORK PRESBYTERIAN HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
NYU_HOSPITALS_CENTER<-new_complications["NYU HOSPITALS CENTER",]
NYU_HOSPITALS_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , NYU_HOSPITALS_CENTER))
radarchart(NYU_HOSPITALS_CENTER, axistype=1 ,
#custom polygon
pcol=rgb(0,0.4,0.3,0.9) , pfcol=rgb(0,0.1,0.4,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "NYU HOSPITALS CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
ST_LUKE_ROOSEVELT_HOSPITAL<-new_complications["ST LUKE'S ROOSEVELT HOSPITAL",]
ST_LUKE_ROOSEVELT_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , ST_LUKE_ROOSEVELT_HOSPITAL))
radarchart(ST_LUKE_ROOSEVELT_HOSPITAL, axistype=1 ,
#custom polygon
pcol=rgb(0.5,0.1,0.6,0.9) , pfcol=rgb(0.5,0,0.1,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "ST LUKE'S ROOSEVELT HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
url.data <- 'https://data.medicare.gov/data/hospital-compare'
url.sourcecode <- 'dummy url'
info <- list(
br(),
h4('NYC Hospital Care Outcomes- ShinyApp'),
p('About:'),
br(),
p('Looking At Mortality and Readmission Rates in NYC Hospitals.'),
hr(),
br(),
tag('ul', list(
tag('li', list('Date', a(href=url.data, url.data))),
tag('li', list('To Find Under', strong('CSV Flat Files - Revised'))) #,
)),
br(),
p('This Shiny App Was Made For Applied STATGU 5243 At Columbia University'),
#p('link zu Sourcecode - GitHub:'),
#p(a(url.sourcecode, href=url.sourcecode)),
hr(),
p('Reference', a('Shiny RStudio', href='http://shiny.rstudio.com/'))
)
?br
path_source <- 'data/Outcome of Care Measures.csv'
path_cleaned <- 'cache/outcome.cleaned.RData'
tidy_data <- function() {
csv_df <- read.csv(path_source, colClasses = "character")
for (column in length(csv_df):8) {
if (sum(grepl('[0-9]', csv_df[,column])) == 0) {
print(paste("column", colnames(csv_df[column]), "deleted"))
csv_df[,column] <- NULL
}
}
names(csv_df) <- gsub('\\.', ' ', names(csv_df))
names(csv_df) <- gsub('30 Day', '30-Day', names(csv_df))
names(csv_df) <- gsub('   ', ' - ', names(csv_df))
names(csv_df) <- gsub('Death  Mortality  Rates', 'Mortality Rates', names(csv_df))
hnames <- csv_df$'Hospital Name'
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CTR', 'M.C.', hnames)
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEMORIAL HOSPITAL', 'M.H.', hnames)
hnames <- gsub('HOSPITALS CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITAL CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITALS', 'H.', hnames)
hnames <- gsub('HOSPITAL', 'H.', hnames)
hnames <- gsub('HEALTH SYSTEM', 'H.S.', hnames)
hnames <- gsub(', THE$', '', hnames)
hnames <- gsub('HEALTHCARE', 'HC.', hnames)
hnames <- gsub('UNIVERSITY', 'UNIV.', hnames)
hnames <- gsub('SYSTEMS', 'S.', hnames)
hnames <- gsub('SYSTEM', 'S.', hnames)
hnames <- gsub('CENTERS', 'C.', hnames)
hnames <- gsub('CENTER', 'C.', hnames)
csv_df$Hospital <- hnames
csv_df
}
save_cleaned_data <- function() {
csv_df <- tidy_data()
save(csv_df, file=path_cleaned)
}
load_cleaned_data <- function() {
if (!file.exists(path_cleaned)) {
parent <- dirname(path_cleaned)
if (!file.exists(parent)) {
dir.create(parent)
}
save_cleaned_data()
}
load(file=path_cleaned)
csv_df
}
csv_df <- load_cleaned_data()
states <- unique(csv_df$State)
columns <- colnames(csv_df[11:(length(csv_df)-1)])
outcomes <- colnames(csv_df[11:(length(csv_df)-1)])
mid <- function(csv_df, nmin, nmax) {
tail(head(csv_df, nmax), nmax - nmin + 1)
}
get_col_index <- function(csv_df, name) {
which(colnames(csv_df) == name)
}
shiny::runApp()
runApp()
Manhattan_hospital<-as.data.frame(read.csv(file = filename,header=T))
filename<-"../data/hospital_manhattan_basic_info.csv"
Manhattan_hospital<-as.data.frame(read.csv(file = filename,header=T))
runApp()
getwd()
Manhattan_hospital<-as.data.frame(read.csv("../data/hospital_manhattan_basic_info.csv",header=T))
runApp()
read.csv("../data/hospital_manhattan_basic_info.csv",header=T)
Manhattan_hospital<-as.data.frame(read.csv("../data/hospital_manhattan_basic_info.csv",header=T))
Manhattan_hospital
runApp()
runApp()
runApp()
filename
Manhattan_hospital<-as.data.frame(read.csv(file = filename,header=T))
new_complications<-as.data.frame(matrix(NA,ncol=length(levels(complications$Measure.Name)),nrow=length(levels(complications$Hospital.Name))))
Manhattan_hospital
runExample("01_hello")
runExample("02_text")
runApp('~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/4f001032e9f851d0fc4cbf56f988db10/Message/MessageTemp/4e374e208d45befa12db8649b9e2bdbf/File')
install.packages("devtools")
runApp('~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/4f001032e9f851d0fc4cbf56f988db10/Message/MessageTemp/4e374e208d45befa12db8649b9e2bdbf/File')
install.packages("googleVis")
runApp('~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/4f001032e9f851d0fc4cbf56f988db10/Message/MessageTemp/4e374e208d45befa12db8649b9e2bdbf/File')
runApp('~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/4f001032e9f851d0fc4cbf56f988db10/Message/MessageTemp/4e374e208d45befa12db8649b9e2bdbf/File')
runApp('~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/4f001032e9f851d0fc4cbf56f988db10/Message/MessageTemp/4e374e208d45befa12db8649b9e2bdbf/File')
runApp()
install.packages("rCharts")
install.packages("rCharts")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(aes(y=rank, x=xname, fill = color), data = pat4) +
geom_bar(stat = 'identity', width = .07) +
coord_flip() +
#scale_fill_manual('D', values = c('red', 'yellow', 'green')) +
scale_fill_discrete("") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y = rotatedAxisElementText(0,'y'),
legend.text = element_blank(),
legend.position = "none") +
geom_point(data = point) +
geom_text(data = level, label = level$t, col = "gray")
pat4 <- data.frame(
xname = c("hospital", "hospital", "hospital"),
rank = c(8.145499, 16.290998, 8.145499),
color = c("a", "b", "c")
)
point <- data.frame(
xname = "hospital",
rank = 18,
color = "a"
)
level <- data.frame(
xname = c("hospital", "hospital", "hospital"),
t = c("Low", "Medium", "High"),
rank = c(4, 16, 28),
color = c("a", "a", "a")
)
library(ggplot2)
library(gridExtra)
rotatedAxisElementText = function(angle,position='x'){
angle     = angle[1];
position  = position[1]
positions = list(x=0,y=90,top=180,right=270)
if(!position %in% names(positions))
stop(sprintf("'position' must be one of [%s]",paste(names(positions),collapse=", ")),call.=FALSE)
if(!is.numeric(angle))
stop("'angle' must be numeric",call.=FALSE)
rads  = (angle - positions[[ position ]])*pi/180
hjust = 0.5*(1 - sin(rads))
vjust = 0.5*(1 + cos(rads))
element_text(angle=angle,vjust=vjust,hjust=hjust)
}
ggplot(aes(y=rank, x=xname, fill = color), data = pat4) +
geom_bar(stat = 'identity', width = .07) +
coord_flip() +
#scale_fill_manual('D', values = c('red', 'yellow', 'green')) +
scale_fill_discrete("") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y = rotatedAxisElementText(0,'y'),
legend.text = element_blank(),
legend.position = "none") +
geom_point(data = point) +
geom_text(data = level, label = level$t, col = "gray")
pat4 <- data.frame(
xname = c("Doc", "Doc", "Doc"),
rank = c(q[1]-min(score), q[2]-q[1], q[3]-q[2]),
color = c("c", "b", "a")
)
point <- data.frame(
xname = "Doc",
rank = score[121]-min(score),
color = "a"
)
level <- data.frame(
xname = c("Doc", "Doc", "Doc"),
t = c("Low", "Medium", "High"),
rank = c((q[1]-min(score))/2, (q[1]+q[2])/2-min(score), (q[3]+q[2])/2-min(score)),
color = c("a", "a", "a")
)
all_doc <- rbind(score_BELLEVUE_HOSPITAL_CENTER, score_HARLEM_HOSPITAL_CENTER, score_HOSPITAL_FOR_SPECIAL_SURGERY, score_LENOX_HILL_HOSPITAL, score_METROPOLITAN_HOSPITAL_CENTER, score_MOUNT_SINAI_BETH_ISRAEL_PETRIE_CAMPUS, score_MOUNT_SINAI_HOSPITAL, score_N_Y_EYE_AND_EAR_INFIRMARY, score_NEW_YORK_PRESBYTERIAN_HOSPITAL, score_ikNYU_HOSPITALS_CENTER, score_ROCKEFELLER_UNIVERSITY_HOSPITAL, score_ST_LUKE_S_ROOSEVELT_HOSPITAL)
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/data")
hos_score <- read.csv("manhattan_hospital_basic_update.csv")
score_BELLEVUE_HOSPITAL_CENTER <- read.csv("score_BELLEVUE_HOSPITAL_CENTER.csv")
score_HARLEM_HOSPITAL_CENTER <- read.csv("score_HARLEM_HOSPITAL_CENTER.csv")
score_HOSPITAL_FOR_SPECIAL_SURGERY <- read.csv("score_HOSPITAL_FOR_SPECIAL_SURGERY.csv")
score_LENOX_HILL_HOSPITAL <- read.csv("score_LENOX_HILL_HOSPITAL.csv")
score_METROPOLITAN_HOSPITAL_CENTER <- read.csv("score_METROPOLITAN_HOSPITAL_CENTER.csv")
score_MOUNT_SINAI_BETH_ISRAEL_PETRIE_CAMPUS <- read.csv("score_MOUNT_SINAI_BETH_ISRAEL_PETRIE_CAMPUS.csv")
score_MOUNT_SINAI_HOSPITAL <- read.csv("score_MOUNT_SINAI_HOSPITAL.csv")
score_N_Y_EYE_AND_EAR_INFIRMARY <- read.csv("score_N_Y_EYE_AND_EAR_INFIRMARY.csv")
score_NEW_YORK_PRESBYTERIAN_HOSPITAL <- read.csv("score_NEW_YORK_PRESBYTERIAN_HOSPITAL.csv")
score_ikNYU_HOSPITALS_CENTER <- read.csv("score_ikNYU_HOSPITALS_CENTER.csv")
score_ROCKEFELLER_UNIVERSITY_HOSPITAL <- read.csv("score_ROCKEFELLER_UNIVERSITY_HOSPITAL.csv")
score_ST_LUKE_S_ROOSEVELT_HOSPITAL <- read.csv("score_ST_LUKE_S_ROOSEVELT_HOSPITAL.csv")
general_score <- hos_score$Performance.Score
max <- max(na.omit(general_score))
min <- min(na.omit(general_score))
all_doc <- rbind(score_BELLEVUE_HOSPITAL_CENTER, score_HARLEM_HOSPITAL_CENTER, score_HOSPITAL_FOR_SPECIAL_SURGERY, score_LENOX_HILL_HOSPITAL, score_METROPOLITAN_HOSPITAL_CENTER, score_MOUNT_SINAI_BETH_ISRAEL_PETRIE_CAMPUS, score_MOUNT_SINAI_HOSPITAL, score_N_Y_EYE_AND_EAR_INFIRMARY, score_NEW_YORK_PRESBYTERIAN_HOSPITAL, score_ikNYU_HOSPITALS_CENTER, score_ROCKEFELLER_UNIVERSITY_HOSPITAL, score_ST_LUKE_S_ROOSEVELT_HOSPITAL)
score <- na.omit(all_doc$score)
q <- as.numeric(quantile(score, c(.25,.75,1)))
pat4 <- data.frame(
xname = c("Doc", "Doc", "Doc"),
rank = c(q[1]-min(score), q[2]-q[1], q[3]-q[2]),
color = c("c", "b", "a")
)
point <- data.frame(
xname = "Doc",
rank = score[121]-min(score),
color = "a"
)
level <- data.frame(
xname = c("Doc", "Doc", "Doc"),
t = c("Low", "Medium", "High"),
rank = c((q[1]-min(score))/2, (q[1]+q[2])/2-min(score), (q[3]+q[2])/2-min(score)),
color = c("a", "a", "a")
)
library(ggplot2)
library(gridExtra)
rotatedAxisElementText = function(angle,position='x'){
angle     = angle[1];
position  = position[1]
positions = list(x=0,y=90,top=180,right=270)
if(!position %in% names(positions))
stop(sprintf("'position' must be one of [%s]",paste(names(positions),collapse=", ")),call.=FALSE)
if(!is.numeric(angle))
stop("'angle' must be numeric",call.=FALSE)
rads  = (angle - positions[[ position ]])*pi/180
hjust = 0.5*(1 - sin(rads))
vjust = 0.5*(1 + cos(rads))
element_text(angle=angle,vjust=vjust,hjust=hjust)
}
ggplot(aes(y=rank, x=xname, fill = color), data = pat4) +
geom_bar(stat = 'identity', width = .07) +
coord_flip() +
#scale_fill_manual('D', values = c('red', 'yellow', 'green')) +
scale_fill_discrete("") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y = rotatedAxisElementText(0,'y'),
legend.text = element_blank(),
legend.position = "none") +
geom_point(data = point) +
geom_text(data = level, label = level$t, col = "gray")
q <- as.numeric(quantile(score, c(.2,.8,1)))
pat4 <- data.frame(
xname = c("Doc", "Doc", "Doc"),
rank = c(q[1]-min(score), q[2]-q[1], q[3]-q[2]),
color = c("c", "b", "a")
)
point <- data.frame(
xname = "Doc",
rank = score[121]-min(score),
color = "a"
)
level <- data.frame(
xname = c("Doc", "Doc", "Doc"),
t = c("Low", "Medium", "High"),
rank = c((q[1]-min(score))/2, (q[1]+q[2])/2-min(score), (q[3]+q[2])/2-min(score)),
color = c("a", "a", "a")
)
ggplot(aes(y=rank, x=xname, fill = color), data = pat4) +
geom_bar(stat = 'identity', width = .07) +
coord_flip() +
#scale_fill_manual('D', values = c('red', 'yellow', 'green')) +
scale_fill_discrete("") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y = rotatedAxisElementText(0,'y'),
legend.text = element_blank(),
legend.position = "none") +
geom_point(data = point) +
geom_text(data = level, label = level$t, col = "gray")
runApp('~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp')
runApp('~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp')
runApp('~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp')
runApp('~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp')
runApp('~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp')
