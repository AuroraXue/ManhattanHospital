E[D] <- Time + B
}
else {
D <- which.min(E)
E[D] <- Time + B
W <- c(W, 0)
}
Arrive <- c(Arrive, Time)
Doc <- c(Doc, D)
Leave <- c(Leave, Time + B)
}
cbind(Arrive, Doc, Leave, W)
if (sum(W>0) == 0) {M <- 0}
else {M <- mean((W[W>0]))}
return(c(length(W), sum(W>0), M, max(W), Time+B-420))
}
Patient()
result <- matrix(nrow = 2000, ncol = 5)
for (i in 1:2000) {
result[i, ] <- Patient
}
Patient
Patient
Patient()
for (i in 1:2000) {
result[i, ] <- Patient()
}
summary(result)
summary(result)[1,]
head(result)
Min <- c(min(R[,1]), min(R[,2]), min(R[,3]), min(R[,4]), min(R[,5]))
Median <- c(median(R[,1]), median(R[,2]), median(R[,3]), median(R[,4]), median(R[,5]))
Max <- c(max(R[,1]), max(R[,2]), max(R[,3]), max(R[,4]), max(R[,5]))
R <- matrix(nrow = 2000, ncol = 5)
for (i in 1:2000) {
R[i, ] <- Patient()
}
Min <- c(min(R[,1]), min(R[,2]), min(R[,3]), min(R[,4]), min(R[,5]))
Median <- c(median(R[,1]), median(R[,2]), median(R[,3]), median(R[,4]), median(R[,5]))
Max <- c(max(R[,1]), max(R[,2]), max(R[,3]), max(R[,4]), max(R[,5]))
cbind(Min, Median, Max)
mean(R[,2]==0)
mean(R[,5]==0)
mean(R[,5]>30)
-0.5*log(0.5)*2
-0.1*log(0.1)-0.9*log(0.9)
log(1)
-0.1*log10(0.1)-0.9*log10(0.9)
-0.5*log10(0.5)*2
-0.5*log10(0.5)-0.5*log10(0.5)
-0.1*log10(0.1)-0.9*log10(0.9)
log(1-2)
log(3-2)
log(3-1)
log(5-3)
log(5)/log(3)
plot(cars)
install.packages("dplyr")
install.packages("readr")
install.packages("DT")
tibble(x = 1:3, y = list(1:5, 1:10, 1:20))
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
tibble(x = 1:3, y = list(1:5, 1:10, 1:20))
install.packages("tibbles")
?tibbles
?tibble\
?tibble
tibble(a, b = a * 2)
library("DT")
library("dplyr")
tibble(a, b = a * 2)
tibble(x = 1:3, y = list(1:5, 1:10, 1:20))
y
A <- tibble(x = 1:3, y = list(1:5, 1:10, 1:20))
A
A["y"]
A["y"][1]
a <- 1:5
tibble(a, b = a * 2)
tibble(a, b = a * 2, c = 1)
tibble(x = runif(10), y = x * 2)
y = list(1:5, 1:10, 1:20)
y
Doc <- read.csv("Physician_Compare_NY.csv")
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/data")
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp")
library("leaflet")
library("dplyr")
library("png")
library("grid")
filename<-"hospital_manhattan_basic_info1.csv"
Manhattan_hospital<-read.csv(file = filename,header=T)
Manhattan_hospital<-read.csv("hospital_manhattan_basic_info.csv")
Manhattan_hospital<-read.csv("hospital_manhattan_basic_info1.csv")
Manhattan_hospital$Score<-as.numeric(Manhattan_hospital$Score)
filename<-"hospital_manhattan_basic_info1.csv"
Manhattan_hospital<-read.csv(file = filename,header=T)
Manhattan_hospital<-read.csv("hospital_manhattan_basic_info1.csv")
Manhattan_hospital$Score<-as.numeric(Manhattan_hospital$Score)
as.numeric(Manhattan_hospital$Score)
Manhattan_hospital$Score
filename<-"hospital_manhattan_basic_info1.csv"
Manhattan_hospital<-read.csv(file = filename,header=T)
View(Manhattan_hospital)
cost<-c()
for (i in 1:nrow(Manhattan_hospital)){
if (is.na(Manhattan_hospital$Score[i])==FALSE){
if (Manhattan_hospital$Score[i]<0.965){
cost[i]<-"Lower than Average"
}else if(Manhattan_hospital$Score[i]>=0.965 & Manhattan_hospital$Score[i]<=0.9975){
cost[i]<-"About Average"
}else{
cost[i]<-"Above Average"
}
}else{
cost[i]<="NA"
}
}
filename<-"hospital_manhattan_basic_info1.csv"
Manhattan_hospital<-read.csv(file = filename,header=T)
Manhattan_hospital<-read.csv("hospital_manhattan_basic_info1.csv")
Manhattan_hospital$Score<-as.numeric(Manhattan_hospital$Price.Score)
cost<-c()
for (i in 1:nrow(Manhattan_hospital)){
if (is.na(Manhattan_hospital$Score[i])==FALSE){
if (Manhattan_hospital$Score[i]<0.965){
cost[i]<-"Lower than Average"
}else if(Manhattan_hospital$Score[i]>=0.965 & Manhattan_hospital$Score[i]<=0.9975){
cost[i]<-"About Average"
}else{
cost[i]<-"Above Average"
}
}else{
cost[i]<="NA"
}
}
Manhattan_hospital<-cbind(Manhattan_hospital,cost)
averageWaitingtime<-read.csv("Average_Waitingtime.csv")
averageWaitingtime<-averageWaitingtime$Average.WaitingTime
content1<-paste("<b><a href ='http://www.mountsinai.org'> Mount Sinai Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[1],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[1])
content2<-paste("<b><a href ='http://www.mountsinai.org/locations/st-lukes'> Mount Sinai St. Luke's Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[2], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[2])
content3<-paste("<b><a href ='www.nyee.edu'> New York Eyes and Ear Infirmary</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[3],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[3])
content4<-paste("<b><a href ='http://www.nyp.org/'> New York Presbyterian Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[4], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[4])
content5<-paste("<b><a href ='https://www.northwell.edu/find-care/locations/lenox-hill-hospital'> Lenox Hill Hospital | Northwell Health</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[5], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[5])
content6<-paste("<b><a href ='http://www.bethisraelny.org/petrie/'> Mount Sinai Beth Israel - Petrie Division</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[6], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[6])
content7<-paste("<b><a href ='http://www.nychealthandhospitals.org/metropolitan/'> NYC Health + Hospitals| Metropolitan</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[7], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[7])
content8<-paste("<b><a href ='http://www.nychealthandhospitals.org/bellevue/'> NYC Health + Hospitals| Bellevue</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[8], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[8])
content9<-paste("<b><a href ='https://profiles.health.ny.gov/hospital/view/103021'> NYU Hospital Center</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[9],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[9])
content10<-paste("<b><a href ='http://www.nychealthandhospitals.org/harlem/'> Harlem Hospital Center</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[10], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[10])
content11<-paste("<b><a href ='https://www.hss.edu/why-choose-hss.asp?gclid=COP0hOaFndICFQ5YDQodKWcJ4Q'> Hospital for Special Surgery</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[11], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[11])
content12<-paste("<b><a href ='https://www.rucares.org/'> The Rockefeller University Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[12], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[12])
hospital_content<-c(content1,content2,content3,content4,content5,content6,content7,content8,content9,content10,content11,content12)
(m <- leaflet() %>% addTiles())
img <- readPNG("nyc2013_map_results.png")
grid.raster(img)
m %>% setView(lng = -73.835242 , lat =  40.740610, zoom = 10)
m %>% setView(lng = -73.9712 , lat =  40.7831, zoom = 12)
(m2 <- m
%>% # popup
addTiles() %>%
# add som markers:
addMarkers(Manhattan_hospital$lng,Manhattan_hospital$lat,popup=hospital_content))
Manhattan_hospital$lng
names(Manhattan_hospital)
m %>% setView(lng = -73.9712 , lat =  40.7831, zoom = 12)
(m2 <- m
%>% # popup
addTiles() %>%
# add som markers:
addMarkers(Manhattan_hospital$Longitude,Manhattan_hospital$Latitude,popup=hospital_content))
complications<-read.csv("Complications_Manhattan.csv")
new_complications<-as.data.frame(matrix(NA,ncol=length(levels(complications$Measure.Name)),nrow=length(levels(complications$Hospital.Name))))
colnames(new_complications)<-levels(complications$Measure.Name)
colnames(new_complications)
rownames(new_complications)<-levels(complications$Hospital.Name)
for(i in rownames(new_complications)){
for(j in colnames(new_complications)){
new_complications[i,j]=complications$Score[complications$Hospital.Name==i&complications$Measure.Name==j]
}
}
new_complications<-new_complications[,-4]
new_complications<-apply(new_complications,2,order)
rownames(new_complications)<-levels(complications$Hospital.Name)
averageNYCperformance<-rep(6,ncol(new_complications))
new_complications=rbind(new_complications,averageNYCperformance)
library(fmsb)
BELLEVUE_HOSPITAL_CENTER<-new_complications["BELLEVUE HOSPITAL CENTER",]
BELLEVUE_HOSPITAL_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , BELLEVUE_HOSPITAL_CENTER))
radarchart( BELLEVUE_HOSPITAL_CENTER  , axistype=1 ,
#custom polygon
pcol=rgb(0.2,0.5,0.5,0.9) , pfcol=rgb(0.2,0.5,0.5,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "BELLEVUE HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3:Best Performance","3-6:Below Average","6-9:Above Average","9-12:Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
HARLEM_HOSPITAL_CENTER<-new_complications["HARLEM HOSPITAL CENTER",]
HARLEM_HOSPITAL_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , HARLEM_HOSPITAL_CENTER))
radarchart( HARLEM_HOSPITAL_CENTER  , axistype=1 ,
#custom polygon
pcol=rgb(0.9,0.6,0.5,0.9) , pfcol=rgb(0.7,0.5,0.5,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "HARLEM HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
HOSPITAL_FOR_SPECIAL_SURGERY<-new_complications["HOSPITAL FOR SPECIAL SURGERY",]
HOSPITAL_FOR_SPECIAL_SURGERY=as.data.frame(rbind(rep(11,10) , rep(0,10) , HOSPITAL_FOR_SPECIAL_SURGERY))
radarchart( HOSPITAL_FOR_SPECIAL_SURGERY  , axistype=1 ,
#custom polygon
pcol=rgb(0.2,0.3,0.5,0.9) , pfcol=rgb(0.2,0.2,0.5,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "HARLEM HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
LENOX_HILL_HOSPITAL<-new_complications["LENOX HILL HOSPITAL",]
LENOX_HILL_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , LENOX_HILL_HOSPITAL))
radarchart( LENOX_HILL_HOSPITAL , axistype=1 ,
#custom polygon
pcol=rgb(0.9,0.8,0.5,0.9) , pfcol=rgb(0.9,0.8,0.6,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "LENOX HILL HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
METROPOLITAN_HOSPITAL_CENTER<-new_complications["METROPOLITAN HOSPITAL CENTER",]
METROPOLITAN_HOSPITAL_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , METROPOLITAN_HOSPITAL_CENTER))
radarchart( METROPOLITAN_HOSPITAL_CENTER , axistype=1 ,
#custom polygon
pcol=rgb(0.9,0.6,1,0.9) , pfcol=rgb(0.9,0.8,0.9,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "METROPOLITAN HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS<-new_complications["MOUNT SINAI BETH ISRAEL/PETRIE CAMPUS",]
MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS=as.data.frame(rbind(rep(11,10) , rep(0,10) , MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS))
radarchart( MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS , axistype=1 ,
#custom polygon
pcol=rgb(0.6,0.2,0.4,0.9) , pfcol=rgb(0.6,0.2,0.2,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "METROPOLITAN HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
MOUNT_SINAI_HOSPITAL<-new_complications["MOUNT SINAI HOSPITAL",]
radarchart( MOUNT_SINAI_HOSPITAL , axistype=1 ,
#custom polygon
pcol=rgb(0.5,0.6,1,0.9) , pfcol=rgb(0.5,0.8,1,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "MOUNT SINAI HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
EYE_EAR_INFIRMARY<-new_complications["N Y EYE AND EAR INFIRMARY",]
EYE_EAR_INFIRMARY=as.data.frame(rbind(rep(11,10) , rep(0,10) , EYE_EAR_INFIRMARY))
radarchart( EYE_EAR_INFIRMARY , axistype=1 ,
#custom polygon
pcol=rgb(0.1,0,0.9,0.9) , pfcol=rgb(0.1,0.2,1,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "New York EYE & EAR INFIRMARY COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
NEW_YORK_PRESBYTERIAN_HOSPITAL<-new_complications["NEW YORK-PRESBYTERIAN HOSPITAL",]
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
radarchart( NEW_YORK_PRESBYTERIAN_HOSPITAL , axistype=1 ,
#custom polygon
pcol=rgb(0.1,0,0.1,0.9) , pfcol=rgb(0.1,0,0.3,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "NEW YORK PRESBYTERIAN HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
NYU_HOSPITALS_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , NYU_HOSPITALS_CENTER))
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
ST_LUKE_ROOSEVELT_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , ST_LUKE_ROOSEVELT_HOSPITAL))
MOUNT_SINAI_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , MOUNT_SINAI_HOSPITAL))
radarchart(ST_LUKE_ROOSEVELT_HOSPITAL, axistype=1 ,
#custom polygon
pcol=rgb(0.5,0.1,0.6,0.9) , pfcol=rgb(0.5,0,0.1,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "ST LUKE'S ROOSEVELT HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
NYU_HOSPITALS_CENTER<-new_complications["NYU HOSPITALS CENTER",]
radarchart(NYU_HOSPITALS_CENTER, axistype=1 ,
#custom polygon
pcol=rgb(0,0.4,0.3,0.9) , pfcol=rgb(0,0.1,0.4,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "NYU HOSPITALS CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
NEW_YORK_PRESBYTERIAN_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , NEW_YORK_PRESBYTERIAN_HOSPITAL))
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
ST_LUKE_ROOSEVELT_HOSPITAL<-new_complications["ST LUKE'S ROOSEVELT HOSPITAL",]
url.data <- 'https://data.medicare.gov/data/hospital-compare'
url.sourcecode <- 'dummy url'
info <- list(
br(),
h4('NYC Hospital Care Outcomes- ShinyApp'),
p('About:'),
br(),
p('Looking At Mortality and Readmission Rates in NYC Hospitals.'),
hr(),
br(),
tag('ul', list(
tag('li', list('Date', a(href=url.data, url.data))),
tag('li', list('To Find Under', strong('CSV Flat Files - Revised'))) #,
)),
br(),
p('This Shiny App Was Made For Applied STATGU 5243 At Columbia University'),
#p('link zu Sourcecode - GitHub:'),
#p(a(url.sourcecode, href=url.sourcecode)),
hr(),
p('Reference', a('Shiny RStudio', href='http://shiny.rstudio.com/'))
)
path_source <- '../data/Outcome of Care Measures.csv'
path_cleaned <- '../cache/outcome.cleaned.RData'
tidy_data <- function() {
csv_df <- read.csv(path_source, colClasses = "character")
for (column in length(csv_df):8) {
if (sum(grepl('[0-9]', csv_df[,column])) == 0) {
print(paste("column", colnames(csv_df[column]), "deleted"))
csv_df[,column] <- NULL
}
}
names(csv_df) <- gsub('\\.', ' ', names(csv_df))
names(csv_df) <- gsub('30 Day', '30-Day', names(csv_df))
names(csv_df) <- gsub('   ', ' - ', names(csv_df))
names(csv_df) <- gsub('Death  Mortality  Rates', 'Mortality Rates', names(csv_df))
hnames <- csv_df$'Hospital Name'
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CTR', 'M.C.', hnames)
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEMORIAL HOSPITAL', 'M.H.', hnames)
hnames <- gsub('HOSPITALS CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITAL CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITALS', 'H.', hnames)
hnames <- gsub('HOSPITAL', 'H.', hnames)
hnames <- gsub('HEALTH SYSTEM', 'H.S.', hnames)
hnames <- gsub(', THE$', '', hnames)
hnames <- gsub('HEALTHCARE', 'HC.', hnames)
hnames <- gsub('UNIVERSITY', 'UNIV.', hnames)
hnames <- gsub('SYSTEMS', 'S.', hnames)
hnames <- gsub('SYSTEM', 'S.', hnames)
hnames <- gsub('CENTERS', 'C.', hnames)
hnames <- gsub('CENTER', 'C.', hnames)
csv_df$Hospital <- hnames
csv_df
}
save_cleaned_data <- function() {
csv_df <- tidy_data()
save(csv_df, file=path_cleaned)
}
load_cleaned_data <- function() {
if (!file.exists(path_cleaned)) {
parent <- dirname(path_cleaned)
if (!file.exists(parent)) {
dir.create(parent)
}
save_cleaned_data()
}
load(file=path_cleaned)
csv_df
}
csv_df <- load_cleaned_data()
function (description = "", open = "", blocking = TRUE, encoding = getOption("encoding"),
raw = FALSE, method = getOption("url.method", "default"))
csv_df <- load_cleaned_data()
csv_df <- load_cleaned_data()
csv_df <- load_cleaned_data()
path_source <- '~/data/Outcome of Care Measures.csv'
path_cleaned <- '~/cache/outcome.cleaned.RData'
tidy_data <- function() {
csv_df <- read.csv(path_source, colClasses = "character")
for (column in length(csv_df):8) {
if (sum(grepl('[0-9]', csv_df[,column])) == 0) {
print(paste("column", colnames(csv_df[column]), "deleted"))
csv_df[,column] <- NULL
}
}
names(csv_df) <- gsub('\\.', ' ', names(csv_df))
names(csv_df) <- gsub('30 Day', '30-Day', names(csv_df))
names(csv_df) <- gsub('   ', ' - ', names(csv_df))
names(csv_df) <- gsub('Death  Mortality  Rates', 'Mortality Rates', names(csv_df))
hnames <- csv_df$'Hospital Name'
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CTR', 'M.C.', hnames)
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEMORIAL HOSPITAL', 'M.H.', hnames)
hnames <- gsub('HOSPITALS CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITAL CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITALS', 'H.', hnames)
hnames <- gsub('HOSPITAL', 'H.', hnames)
hnames <- gsub('HEALTH SYSTEM', 'H.S.', hnames)
hnames <- gsub(', THE$', '', hnames)
hnames <- gsub('HEALTHCARE', 'HC.', hnames)
hnames <- gsub('UNIVERSITY', 'UNIV.', hnames)
hnames <- gsub('SYSTEMS', 'S.', hnames)
hnames <- gsub('SYSTEM', 'S.', hnames)
hnames <- gsub('CENTERS', 'C.', hnames)
hnames <- gsub('CENTER', 'C.', hnames)
csv_df$Hospital <- hnames
csv_df
}
save_cleaned_data <- function() {
csv_df <- tidy_data()
save(csv_df, file=path_cleaned)
}
load_cleaned_data <- function() {
if (!file.exists(path_cleaned)) {
parent <- dirname(path_cleaned)
if (!file.exists(parent)) {
dir.create(parent)
}
save_cleaned_data()
}
load(file=path_cleaned)
csv_df
}
csv_df <- load_cleaned_data()
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp")
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp")
path_source <- '../data/Outcome of Care Measures.csv'
path_cleaned <- '../cache/outcome.cleaned.RData'
csv_df <- load_cleaned_data()
path_source <- 'Outcome of Care Measures.csv'
path_cleaned <- '../cache/outcome.cleaned.RData'
csv_df <- load_cleaned_data()
shiny::runApp('~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp')
