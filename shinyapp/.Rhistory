} else {
sheetList[[si]][['dynamicProperties']][[n]][[n1]] <<- x[[n1]]
}
}
} else {
sheetList[[si]][['dynamicProperties']][[n]] <<- x
}
}
}
for(di in names(allData$docl)){
if(is.null(docList[[di]])){ # new doc
docList[[di]] <<- reactiveValues()
}
for(n in names(allData$docl[[di]])){
x <- allData$docl[[di]][[n]]
docList[[di]][[n]] <<- x
}
}
## update all UI
sapply(unique(c(names(input), names(updateInput))), triggerUpdateInput)
updateTabsetPanel(session, 'mainNavBar', selected='Visualize')
}
observe({
inFile <- input[['loadProject']]
isolate({
if (!is.null(inFile)){
loadProject(file=inFile$datapath, replaceOrMerge=input[['loadProjectAction']])
}
})
})
observe({
v <- input$openSampleProj
isolate({
file <- paste('samples', input[['sampleProj']], sep='/')
if(v && file.exists(file)){
loadProject(file=file, 'replace')
}
})
})
spending=read.csv("spending_NYS.csv")
install.packages("maps")
library(maps)
map("state")
map("NY")
map("state")
map("nyc")
library(maps)
map("nyc")
devtools::install_github("zachcp/nycmaps")
libary(nycmaps)
library(maps)
library(maps)
library(nycmaps)
map("nyc")
a=c(1,NA,3,2,NA)
is.na(a)
a[is.na(a)]=0
a
a=c(1,NA,3,2,NA)
a[which(is.na(a))]=0
a
install.packages("shinythemes")
shiny::runApp('Documents/Spr2017-proj2-grp9/shinyapp')
shiny::runApp('Documents/Spr2017-proj2-grp9/shinyapp')
runApp('Documents/Spr2017-proj2-grp9/shinyapp')
source("help_func.R",local=T)
source("HospitalMap.R",local=T)
source("Plot.R",local=T)
setwd("~/Documents/Spr2017-proj2-grp9/shinyapp")
runApp()
source("help_func.R",local=T)
source("HospitalMap.R",local=T)
source("Plot.R",local=T)
runApp()
hospital_content<-data.frame(content8,content10,content11,content5,content7,content6,content1,content3,content4,content9,content2,content12)
colnames(hospital_content)<-c(rownames(new_complications)[1:11],"Reckefeller Unisity")
View(hospital_content)
hospital_content[names(which(new_complications[,input$care]==1))]
names(new_complications)
colnames(new_complications)
rownames(new_complications)
names(hospital_content)
hospital_content["BELLEVUE HOSPITAL CENTER"]
runApp()
hospital_content[names(which(new_complications[,"Serious complications"]==1))]
shiny::runApp()
runApp()
names(which(new_complications[,"Serious complications"]==1))
hospital_content["ST LUKE'S ROOSEVELT HOSPITAL"]
hospital_content[1]
hospital_content[which(new_complications[,"Serious complications"]==1)]
names(hospital_content)
hospital_content
hospital_content<-data.frame(content8,content10,content11,content5,content7,content6,content1,content3,content4,content9,content2,content12)
colnames(hospital_content)<-c(rownames(new_complications)[1:11],"Reckefeller Unisity")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
content1<-paste("<b><a href ='http://www.mountsinai.org'> Mount Sinai Hospital</a><b>","<br/>",
"Average Waiting Time: 29","<br/>",
"Cost Level: Lower than Average")
content2<-paste("<b><a href ='http://www.mountsinai.org/locations/st-lukes'> Mount Sinai St. Luke's Hospital</a><b>","<br/>",
"Average Waiting Time: 24", "<br/>",
"Cost Level: About Average")
content3<-paste("<b><a href ='www.nyee.edu'> New York Eyes and Ear Infirmary</a><b>","<br/>",
"Average Waiting Time: NA","<br/>",
"Cost Level: Above Average")
content4<-paste("<b><a href ='http://www.nyp.org/'> New York Presbyterian Hospital</a><b>","<br/>",
"Average Waiting Time: 15", "<br/>",
"Cost Level: About Average")
content5<-paste("<b><a href ='https://www.northwell.edu/find-care/locations/lenox-hill-hospital'> Lenox Hill Hospital | Northwell Health</a><b>","<br/>",
"Average Waiting Time: 20", "<br/>",
"Cost Level: Lower than Average")
content6<-paste("<b><a href ='http://www.bethisraelny.org/petrie/'> Mount Sinai Beth Israel - Petrie Division</a><b>","<br/>",
"Average Waiting Time: 23", "<br/>",
"Cost Level: Above Average")
content7<-paste("<b><a href ='http://www.nychealthandhospitals.org/metropolitan/'> NYC Health + Hospitals| Metropolitan</a><b>","<br/>",
"Average Waiting Time: 50", "<br/>",
"Cost Level: Above Average")
content8<-paste("<b><a href ='http://www.nychealthandhospitals.org/bellevue/'> NYC Health + Hospitals| Bellevue</a><b>","<br/>",
"Average Waiting Time: 28", "<br/>",
"Cost Level: NA")
content9<-paste("<b><a href ='https://profiles.health.ny.gov/hospital/view/103021'> NYU Hospital Center</a><b>","<br/>",
"Average Waiting Time: 11","<br/>",
"Cost Level: About Average")
content10<-paste("<b><a href ='http://www.nychealthandhospitals.org/harlem/'> Harlem Hospital Center</a><b>","<br/>",
"Average Waiting Time: 90", "<br/>",
"Cost Level: Above Average")
content11<-paste("<b><a href ='https://www.hss.edu/why-choose-hss.asp?gclid=COP0hOaFndICFQ5YDQodKWcJ4Q'> Hospital for Special Surgery</a><b>","<br/>",
"Average Waiting Time: NA", "<br/>",
"Cost Level: NA")
content12<-paste("<b><a href ='https://www.rucares.org/'> The Rockefeller University Hospital</a><b>","<br/>",
"Average Waiting Time: NA", "<br/>",
"Cost Level: Lower than Average")
hospital_content<-data.frame(content8,content10,content11,content5,content7,content6,content1,content3,content4,content9,content2,content12)
colnames(hospital_content)<-c(rownames(new_complications)[1:11],"Reckefeller Unisity")
hospital_content
complications<-read.csv("Complications_Manhattan.csv")
filename<-"../data/hospital_manhattan_basic_info.csv"
Manhattan_hospital<-as.data.frame(read.csv(file = filename,header=T))
new_complications<-as.data.frame(matrix(NA,ncol=length(levels(complications$Measure.Name)),nrow=length(levels(complications$Hospital.Name))))
colnames(new_complications)<-levels(complications$Measure.Name)
colnames(new_complications)
rownames(new_complications)<-levels(complications$Hospital.Name)
for(i in rownames(new_complications)){
for(j in colnames(new_complications)){
new_complications[i,j]=complications$Score[complications$Hospital.Name==i&complications$Measure.Name==j]
}
}
>>>>>>> Stashed changes
new_complications<-new_complications[,-4]
new_complications<-apply(new_complications,2,order)
rownames(new_complications)<-levels(complications$Hospital.Name)
averageNYCperformance<-rep(6,ncol(new_complications))
new_complications=rbind(new_complications,averageNYCperformance)
<<<<<<< Updated upstream
library(fmsb)
BELLEVUE_HOSPITAL_CENTER<-new_complications["BELLEVUE HOSPITAL CENTER",]
BELLEVUE_HOSPITAL_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , BELLEVUE_HOSPITAL_CENTER))
radarchart( BELLEVUE_HOSPITAL_CENTER  , axistype=1 ,
#custom polygon
pcol=rgb(0.2,0.5,0.5,0.9) , pfcol=rgb(0.2,0.5,0.5,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "BELLEVUE HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3:Best Performance","3-6:Below Average","6-9:Above Average","9-12:Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
HARLEM_HOSPITAL_CENTER<-new_complications["HARLEM HOSPITAL CENTER",]
HARLEM_HOSPITAL_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , HARLEM_HOSPITAL_CENTER))
radarchart( HARLEM_HOSPITAL_CENTER  , axistype=1 ,
#custom polygon
pcol=rgb(0.9,0.6,0.5,0.9) , pfcol=rgb(0.7,0.5,0.5,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "HARLEM HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
HOSPITAL_FOR_SPECIAL_SURGERY<-new_complications["HOSPITAL FOR SPECIAL SURGERY",]
HOSPITAL_FOR_SPECIAL_SURGERY=as.data.frame(rbind(rep(11,10) , rep(0,10) , HOSPITAL_FOR_SPECIAL_SURGERY))
radarchart( HOSPITAL_FOR_SPECIAL_SURGERY  , axistype=1 ,
#custom polygon
pcol=rgb(0.2,0.3,0.5,0.9) , pfcol=rgb(0.2,0.2,0.5,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "HARLEM HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
LENOX_HILL_HOSPITAL<-new_complications["LENOX HILL HOSPITAL",]
LENOX_HILL_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , LENOX_HILL_HOSPITAL))
radarchart( LENOX_HILL_HOSPITAL , axistype=1 ,
#custom polygon
pcol=rgb(0.9,0.8,0.5,0.9) , pfcol=rgb(0.9,0.8,0.6,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "LENOX HILL HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
METROPOLITAN_HOSPITAL_CENTER<-new_complications["METROPOLITAN HOSPITAL CENTER",]
METROPOLITAN_HOSPITAL_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , METROPOLITAN_HOSPITAL_CENTER))
radarchart( METROPOLITAN_HOSPITAL_CENTER , axistype=1 ,
#custom polygon
pcol=rgb(0.9,0.6,1,0.9) , pfcol=rgb(0.9,0.8,0.9,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "METROPOLITAN HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS<-new_complications["MOUNT SINAI BETH ISRAEL/PETRIE CAMPUS",]
MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS=as.data.frame(rbind(rep(11,10) , rep(0,10) , MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS))
radarchart( MOUNT_SINAI_BETH_ISRAELPETRIE_CAMPUS , axistype=1 ,
#custom polygon
pcol=rgb(0.6,0.2,0.4,0.9) , pfcol=rgb(0.6,0.2,0.2,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "METROPOLITAN HOSPITAL CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
MOUNT_SINAI_HOSPITAL<-new_complications["MOUNT SINAI HOSPITAL",]
radarchart( MOUNT_SINAI_HOSPITAL , axistype=1 ,
#custom polygon
pcol=rgb(0.5,0.6,1,0.9) , pfcol=rgb(0.5,0.8,1,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "MOUNT SINAI HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
EYE_EAR_INFIRMARY<-new_complications["N Y EYE AND EAR INFIRMARY",]
EYE_EAR_INFIRMARY=as.data.frame(rbind(rep(11,10) , rep(0,10) , EYE_EAR_INFIRMARY))
radarchart( EYE_EAR_INFIRMARY , axistype=1 ,
#custom polygon
pcol=rgb(0.1,0,0.9,0.9) , pfcol=rgb(0.1,0.2,1,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "New York EYE & EAR INFIRMARY COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
NEW_YORK_PRESBYTERIAN_HOSPITAL<-new_complications["NEW YORK-PRESBYTERIAN HOSPITAL",]
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
radarchart( NEW_YORK_PRESBYTERIAN_HOSPITAL , axistype=1 ,
#custom polygon
pcol=rgb(0.1,0,0.1,0.9) , pfcol=rgb(0.1,0,0.3,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "NEW YORK PRESBYTERIAN HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
NYU_HOSPITALS_CENTER=as.data.frame(rbind(rep(11,10) , rep(0,10) , NYU_HOSPITALS_CENTER))
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
ST_LUKE_ROOSEVELT_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , ST_LUKE_ROOSEVELT_HOSPITAL))
MOUNT_SINAI_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , MOUNT_SINAI_HOSPITAL))
radarchart(ST_LUKE_ROOSEVELT_HOSPITAL, axistype=1 ,
#custom polygon
pcol=rgb(0.5,0.1,0.6,0.9) , pfcol=rgb(0.5,0,0.1,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "ST LUKE'S ROOSEVELT HOSPITAL COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
NYU_HOSPITALS_CENTER<-new_complications["NYU HOSPITALS CENTER",]
radarchart(NYU_HOSPITALS_CENTER, axistype=1 ,
#custom polygon
pcol=rgb(0,0.4,0.3,0.9) , pfcol=rgb(0,0.1,0.4,0.5) , plwd=2 ,
#custom the grid
cglcol="grey",cglty=1, axislabcol="grey", caxislabels=seq(0,12,3),cglwd=0.2,
title = "NYU HOSPITALS CENTER COMPLICATIONS PERFORMANCE",
vlabels=c("Wound Reopen","Accidental Cut","Blood Stream","Collapsed Lung","Death Rate of Complications","Infections","Pressure Sore","Hip/Knee Replacement Complication Rate","Serious Blood Clots","Serious Complications"),
#custom labels
vlcex=0.4
)
NEW_YORK_PRESBYTERIAN_HOSPITAL=as.data.frame(rbind(rep(11,10) , rep(0,10) , NEW_YORK_PRESBYTERIAN_HOSPITAL))
legend(0.9,1.2,
legend=c("0-3: Best Performance","3-6: Below Average","6-9: Above Average","9-12: Worse Performance"),text.col="black",
bty = "n",cex = 0.7)
ST_LUKE_ROOSEVELT_HOSPITAL<-new_complications["ST LUKE'S ROOSEVELT HOSPITAL",]
url.data <- 'https://data.medicare.gov/data/hospital-compare'
url.sourcecode <- 'dummy url'
info <- list(
br(),
h4('NYC Hospital Care Outcomes- ShinyApp'),
p('About:'),
br(),
p('Looking At Mortality and Readmission Rates in NYC Hospitals.'),
hr(),
br(),
tag('ul', list(
tag('li', list('Date', a(href=url.data, url.data))),
tag('li', list('To Find Under', strong('CSV Flat Files - Revised'))) #,
)),
br(),
p('This Shiny App Was Made For Applied STATGU 5243 At Columbia University'),
#p('link zu Sourcecode - GitHub:'),
#p(a(url.sourcecode, href=url.sourcecode)),
hr(),
p('Reference', a('Shiny RStudio', href='http://shiny.rstudio.com/'))
)
path_source <- '../data/Outcome of Care Measures.csv'
path_cleaned <- '../cache/outcome.cleaned.RData'
tidy_data <- function() {
csv_df <- read.csv(path_source, colClasses = "character")
for (column in length(csv_df):8) {
if (sum(grepl('[0-9]', csv_df[,column])) == 0) {
print(paste("column", colnames(csv_df[column]), "deleted"))
csv_df[,column] <- NULL
}
}
names(csv_df) <- gsub('\\.', ' ', names(csv_df))
names(csv_df) <- gsub('30 Day', '30-Day', names(csv_df))
names(csv_df) <- gsub('   ', ' - ', names(csv_df))
names(csv_df) <- gsub('Death  Mortality  Rates', 'Mortality Rates', names(csv_df))
hnames <- csv_df$'Hospital Name'
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CTR', 'M.C.', hnames)
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEMORIAL HOSPITAL', 'M.H.', hnames)
hnames <- gsub('HOSPITALS CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITAL CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITALS', 'H.', hnames)
hnames <- gsub('HOSPITAL', 'H.', hnames)
hnames <- gsub('HEALTH SYSTEM', 'H.S.', hnames)
hnames <- gsub(', THE$', '', hnames)
hnames <- gsub('HEALTHCARE', 'HC.', hnames)
hnames <- gsub('UNIVERSITY', 'UNIV.', hnames)
hnames <- gsub('SYSTEMS', 'S.', hnames)
hnames <- gsub('SYSTEM', 'S.', hnames)
hnames <- gsub('CENTERS', 'C.', hnames)
hnames <- gsub('CENTER', 'C.', hnames)
csv_df$Hospital <- hnames
csv_df
}
save_cleaned_data <- function() {
csv_df <- tidy_data()
save(csv_df, file=path_cleaned)
}
load_cleaned_data <- function() {
if (!file.exists(path_cleaned)) {
parent <- dirname(path_cleaned)
if (!file.exists(parent)) {
dir.create(parent)
}
save_cleaned_data()
}
load(file=path_cleaned)
csv_df
}
csv_df <- load_cleaned_data()
function (description = "", open = "", blocking = TRUE, encoding = getOption("encoding"),
raw = FALSE, method = getOption("url.method", "default"))
csv_df <- load_cleaned_data()
csv_df <- load_cleaned_data()
csv_df <- load_cleaned_data()
path_source <- '~/data/Outcome of Care Measures.csv'
path_cleaned <- '~/cache/outcome.cleaned.RData'
tidy_data <- function() {
csv_df <- read.csv(path_source, colClasses = "character")
for (column in length(csv_df):8) {
if (sum(grepl('[0-9]', csv_df[,column])) == 0) {
print(paste("column", colnames(csv_df[column]), "deleted"))
csv_df[,column] <- NULL
}
}
names(csv_df) <- gsub('\\.', ' ', names(csv_df))
names(csv_df) <- gsub('30 Day', '30-Day', names(csv_df))
names(csv_df) <- gsub('   ', ' - ', names(csv_df))
names(csv_df) <- gsub('Death  Mortality  Rates', 'Mortality Rates', names(csv_df))
hnames <- csv_df$'Hospital Name'
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CTR', 'M.C.', hnames)
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEMORIAL HOSPITAL', 'M.H.', hnames)
hnames <- gsub('HOSPITALS CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITAL CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITALS', 'H.', hnames)
hnames <- gsub('HOSPITAL', 'H.', hnames)
hnames <- gsub('HEALTH SYSTEM', 'H.S.', hnames)
hnames <- gsub(', THE$', '', hnames)
hnames <- gsub('HEALTHCARE', 'HC.', hnames)
hnames <- gsub('UNIVERSITY', 'UNIV.', hnames)
hnames <- gsub('SYSTEMS', 'S.', hnames)
hnames <- gsub('SYSTEM', 'S.', hnames)
hnames <- gsub('CENTERS', 'C.', hnames)
hnames <- gsub('CENTER', 'C.', hnames)
csv_df$Hospital <- hnames
csv_df
}
save_cleaned_data <- function() {
csv_df <- tidy_data()
save(csv_df, file=path_cleaned)
}
load_cleaned_data <- function() {
if (!file.exists(path_cleaned)) {
parent <- dirname(path_cleaned)
if (!file.exists(parent)) {
dir.create(parent)
}
save_cleaned_data()
}
load(file=path_cleaned)
csv_df
}
csv_df <- load_cleaned_data()
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp")
setwd("~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp")
path_source <- '../data/Outcome of Care Measures.csv'
path_cleaned <- '../cache/outcome.cleaned.RData'
csv_df <- load_cleaned_data()
path_source <- 'Outcome of Care Measures.csv'
path_cleaned <- '../cache/outcome.cleaned.RData'
csv_df <- load_cleaned_data()
shiny::runApp('~/Desktop/sem 2/Applied data science/Spr2017-proj2-grp9/shinyapp')
=======
View(hospital_content)
View(new_complications)
runApp()
runApp()
runApp()
new_complications[,"Serious complications"]
names(hospital_content)==names(which(new_complications[,"Serious complications"]==1))
hospital_content[names(hospital_content)==names(which(new_complications[,"Serious complications"]==1))]
runApp()
View(new_complications)
rownames(new_complications)
names(hospital_content)
rownames(new_complications)==names(hospital_content)
runApp()
runApp()
runApp()
runApp()
install.packages("googleVis")
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
>>>>>>> Stashed changes
shiny::runApp()
runApp()
instass.packages("fields")
install.packages("fields")
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
