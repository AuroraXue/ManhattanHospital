content8<-paste("<b><a href ='http://www.nychealthandhospitals.org/bellevue/'> NYC Health + Hospitals| Bellevue</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[8], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[8])
content9<-paste("<b><a href ='https://profiles.health.ny.gov/hospital/view/103021'> NYU Hospital Center</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[9],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[9])
content10<-paste("<b><a href ='http://www.nychealthandhospitals.org/harlem/'> Harlem Hospital Center</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[10], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[10])
content11<-paste("<b><a href ='https://www.hss.edu/why-choose-hss.asp?gclid=COP0hOaFndICFQ5YDQodKWcJ4Q'> Hospital for Special Surgery</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[11], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[11])
content12<-paste("<b><a href ='https://www.rucares.org/'> The Rockefeller University Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[12], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[12])
hospital_content<-c(content1,content2,content3,content4,content5,content6,content7,content8,content9,content10,content11,content12)
# Plot a default web map (brackets display the result)
(m <- leaflet() %>% addTiles())
img <- readPNG("nyc2013_map_results.png")
grid.raster(img)
# map for the whole new york city
m %>% setView(lng = -73.835242 , lat =  40.740610, zoom = 10)
# map for Manhattan area
m %>% setView(lng = -73.9712 , lat =  40.7831, zoom = 12)
(m2 <- m
%>% # popup
addTiles() %>%
# add som markers:
addMarkers(Manhattan_hospital$Longitude,Manhattan_hospital$Latitude,popup=hospital_content))
shiny::runApp()
path_source <- '../data/Outcome of Care Measures.csv'
path_cleaned <- '../cache/outcome.cleaned.RData'
tidy_data <- function() {
csv_df <- read.csv(path_source, colClasses = "character")
for (column in length(csv_df):8) {
if (sum(grepl('[0-9]', csv_df[,column])) == 0) {
print(paste("column", colnames(csv_df[column]), "deleted"))
csv_df[,column] <- NULL
}
}
names(csv_df) <- gsub('\\.', ' ', names(csv_df))
names(csv_df) <- gsub('30 Day', '30-Day', names(csv_df))
names(csv_df) <- gsub('   ', ' - ', names(csv_df))
names(csv_df) <- gsub('Death  Mortality  Rates', 'Mortality Rates', names(csv_df))
hnames <- csv_df$'Hospital Name'
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CTR', 'M.C.', hnames)
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEMORIAL HOSPITAL', 'M.H.', hnames)
hnames <- gsub('HOSPITALS CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITAL CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITALS', 'H.', hnames)
hnames <- gsub('HOSPITAL', 'H.', hnames)
hnames <- gsub('HEALTH SYSTEM', 'H.S.', hnames)
hnames <- gsub(', THE$', '', hnames)
hnames <- gsub('HEALTHCARE', 'HC.', hnames)
hnames <- gsub('UNIVERSITY', 'UNIV.', hnames)
hnames <- gsub('SYSTEMS', 'S.', hnames)
hnames <- gsub('SYSTEM', 'S.', hnames)
hnames <- gsub('CENTERS', 'C.', hnames)
hnames <- gsub('CENTER', 'C.', hnames)
csv_df$Hospital <- hnames
csv_df
}
save_cleaned_data <- function() {
csv_df <- tidy_data()
save(csv_df, file=path_cleaned)
}
load_cleaned_data <- function() {
if (!file.exists(path_cleaned)) {
parent <- dirname(path_cleaned)
if (!file.exists(parent)) {
dir.create(parent)
}
save_cleaned_data()
}
load(file=path_cleaned)
csv_df
}
csv_df <- load_cleaned_data()
states <- unique(csv_df$State)
columns <- colnames(csv_df[11:(length(csv_df)-1)])
outcomes <- colnames(csv_df[11:(length(csv_df)-1)])
mid <- function(csv_df, nmin, nmax) {
tail(head(csv_df, nmax), nmax - nmin + 1)
}
get_col_index <- function(csv_df, name) {
which(colnames(csv_df) == name)
}
runApp()
complications<-read.csv("Complications_Manhattan.csv")
new_complications<-as.data.frame(matrix(NA,ncol=length(levels(complications$Measure.Name)),nrow=length(levels(complications$Hospital.Name))))
colnames(new_complications)<-levels(complications$Measure.Name)
colnames(new_complications)
rownames(new_complications)<-levels(complications$Hospital.Name)
for(i in rownames(new_complications)){
for(j in colnames(new_complications)){
new_complications[i,j]=complications$Score[complications$Hospital.Name==i&complications$Measure.Name==j]
}
}
new_complications<-new_complications[,-4]
new_complications<-apply(new_complications,2,order)
rownames(new_complications)<-levels(complications$Hospital.Name)
averageNYCperformance<-rep(6,ncol(new_complications))
new_complications=rbind(new_complications,averageNYCperformance)
runApp()
runApp()
runApp()
new_complications
runApp()
runApp()
runApp()
runApp()
runApp()
new_complications<-as.data.frame(matrix(NA,ncol=length(levels(complications$Measure.Name)),nrow=length(levels(complications$Hospital.Name))))
colnames(new_complications)<-levels(complications$Measure.Name)
colnames(new_complications)
rownames(new_complications)<-levels(complications$Hospital.Name)
for(i in rownames(new_complications)){
for(j in colnames(new_complications)){
new_complications[i,j]=complications$Score[complications$Hospital.Name==i&complications$Measure.Name==j]
}
}
new_complications<-new_complications[,-4]
new_complications<-apply(new_complications,2,order)
rownames(new_complications)<-levels(complications$Hospital.Name)
averageNYCperformance<-rep(6,ncol(new_complications))
new_complications=rbind(new_complications,averageNYCperformance)
View(new_complications)
runApp()
runApp('~/GitHub/ADS/Spr2017-proj2-grp9/shinyapp')
setwd("~/GitHub/ADS/Spr2017-proj2-grp9/shinyapp")
runApp()
path_source <- 'Outcome of Care Measures.csv'
path_cleaned <- 'outcome.cleaned.RData'
tidy_data <- function() {
csv_df <- read.csv(path_source, colClasses = "character")
for (column in length(csv_df):8) {
if (sum(grepl('[0-9]', csv_df[,column])) == 0) {
print(paste("column", colnames(csv_df[column]), "deleted"))
csv_df[,column] <- NULL
}
}
names(csv_df) <- gsub('\\.', ' ', names(csv_df))
names(csv_df) <- gsub('30 Day', '30-Day', names(csv_df))
names(csv_df) <- gsub('   ', ' - ', names(csv_df))
names(csv_df) <- gsub('Death  Mortality  Rates', 'Mortality Rates', names(csv_df))
hnames <- csv_df$'Hospital Name'
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CTR', 'M.C.', hnames)
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEMORIAL HOSPITAL', 'M.H.', hnames)
hnames <- gsub('HOSPITALS CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITAL CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITALS', 'H.', hnames)
hnames <- gsub('HOSPITAL', 'H.', hnames)
hnames <- gsub('HEALTH SYSTEM', 'H.S.', hnames)
hnames <- gsub(', THE$', '', hnames)
hnames <- gsub('HEALTHCARE', 'HC.', hnames)
hnames <- gsub('UNIVERSITY', 'UNIV.', hnames)
hnames <- gsub('SYSTEMS', 'S.', hnames)
hnames <- gsub('SYSTEM', 'S.', hnames)
hnames <- gsub('CENTERS', 'C.', hnames)
hnames <- gsub('CENTER', 'C.', hnames)
csv_df$Hospital <- hnames
csv_df
}
save_cleaned_data <- function() {
csv_df <- tidy_data()
save(csv_df, file=path_cleaned)
}
load_cleaned_data <- function() {
if (!file.exists(path_cleaned)) {
parent <- dirname(path_cleaned)
if (!file.exists(parent)) {
dir.create(parent)
}
save_cleaned_data()
}
load(file=path_cleaned)
csv_df
}
csv_df <- load_cleaned_data()
states <- unique(csv_df$State)
columns <- colnames(csv_df[11:(length(csv_df)-1)])
outcomes <- colnames(csv_df[11:(length(csv_df)-1)])
mid <- function(csv_df, nmin, nmax) {
tail(head(csv_df, nmax), nmax - nmin + 1)
}
get_col_index <- function(csv_df, name) {
which(colnames(csv_df) == name)
}
complications<-read.csv("Complications_Manhattan.csv")
new_complications<-as.data.frame(matrix(NA,ncol=length(levels(complications$Measure.Name)),nrow=length(levels(complications$Hospital.Name))))
colnames(new_complications)<-levels(complications$Measure.Name)
colnames(new_complications)
rownames(new_complications)<-levels(complications$Hospital.Name)
for(i in rownames(new_complications)){
for(j in colnames(new_complications)){
new_complications[i,j]=complications$Score[complications$Hospital.Name==i&complications$Measure.Name==j]
}
}
new_complications<-new_complications[,-4]
new_complications<-apply(new_complications,2,order)
rownames(new_complications)<-levels(complications$Hospital.Name)
averageNYCperformance<-rep(6,ncol(new_complications))
new_complications=rbind(new_complications,averageNYCperformance)
library(fmsb)
library("leaflet")
library("dplyr")
library("png")
library("grid")
filename<-"hospital_manhattan_basic_info1.csv"
Manhattan_hospital<-read.csv(file = filename,header=T)
cost<-c()
for (i in 1:nrow(Manhattan_hospital)){
if (is.na(Manhattan_hospital$Price.Score[i])==FALSE){
if (Manhattan_hospital$Price.Score[i]<0.965){
cost[i]<-"Lower than Average"
}else if(Manhattan_hospital$Price.Score[i]>=0.965 & Manhattan_hospital$Price.Score[i]<=0.9975){
cost[i]<-"About Average"
}else{
cost[i]<-"Above Average"
}
}else{
cost[i]<="NA"
}
}
Manhattan_hospital<-cbind(Manhattan_hospital,cost)
averageWaitingtime<-read.csv("Average_Waitingtime.csv")
averageWaitingtime<-averageWaitingtime$Average.WaitingTime
content7<-paste("<b><a href =' '> Mount Sinai Hospital</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[7],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[7])
content12<-paste("<b><a href ='http://www.mountsinai.org/locations/st-lukes'> Mount Sinai St. Luke's Hospital</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[12], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[12])
content8<-paste("<b><a href ='www.nyee.edu'> New York Eyes and Ear Infirmary</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[8],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[8])
content9<-paste("<b><a href ='http://www.nyp.org/'> New York Presbyterian Hospital</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[9], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[9])
content4<-paste("<b><a href ='https://www.northwell.edu/find-care/locations/lenox-hill-hospital'> Lenox Hill Hospital | Northwell Health</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[4], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[4])
content6<-paste("<b><a href ='http://www.bethisraelny.org/petrie/'> Mount Sinai Beth Israel - Petrie Division</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[6], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[6])
content5<-paste("<b><a href ='http://www.nychealthandhospitals.org/metropolitan/'> NYC Health + Hospitals| Metropolitan</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[5], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[5])
content1<-paste("<b><a href ='http://www.nychealthandhospitals.org/bellevue/'> NYC Health + Hospitals| Bellevue</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[1], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[1])
content10<-paste("<b><a href ='https://profiles.health.ny.gov/hospital/view/103021'> NYU Hospital Center</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[10],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[10])
content2<-paste("<b><a href ='http://www.nychealthandhospitals.org/harlem/'> Harlem Hospital Center</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[2], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[2])
content3<-paste("<b><a href ='https://www.hss.edu/why-choose-hss.asp?gclid=COP0hOaFndICFQ5YDQodKWcJ4Q'> Hospital for Special Surgery</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[3], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[3])
content11<-paste("<b><a href ='https://www.rucares.org/'> The Rockefeller University Hospital</ a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[11], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[11])
hospital_content<-c(content1,content2,content3,content4,content5,content6,content7,content8,content9,content10,content11,content12)
# Plot a default web map (brackets display the result)
(m <- leaflet() %>% addTiles())
img <- readPNG("nyc2013_map_results.png")
grid.raster(img)
# map for the whole new york city
m %>% setView(lng = -73.835242 , lat =  40.740610, zoom = 10)
# map for Manhattan area
m %>% setView(lng = -73.9712 , lat =  40.7831, zoom = 12)
(m2 <- m
%>% # popup
addTiles() %>%
# add som markers:
addMarkers(Manhattan_hospital$Longitude,Manhattan_hospital$Latitude,popup=hospital_content))
runApp()
library("leaflet")
library("dplyr")
library("png")
library("grid")
filename<-"hospital_manhattan_basic_info1.csv"
Manhattan_hospital<-read.csv(file = filename,header=T)
cost<-c()
for (i in 1:nrow(Manhattan_hospital)){
if (is.na(Manhattan_hospital$Price.Score[i])==FALSE){
if (Manhattan_hospital$Price.Score[i]<0.965){
cost[i]<-"Lower than Average"
}else if(Manhattan_hospital$Price.Score[i]>=0.965 & Manhattan_hospital$Price.Score[i]<=0.9975){
cost[i]<-"About Average"
}else{
cost[i]<-"Above Average"
}
}else{
cost[i]<="NA"
}
}
Manhattan_hospital<-cbind(Manhattan_hospital,cost)
averageWaitingtime<-read.csv("Average_Waitingtime.csv")
averageWaitingtime<-averageWaitingtime$Average.WaitingTime
content1<-paste("<b><a href ='http://www.mountsinai.org'> Mount Sinai Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[1],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[1])
content2<-paste("<b><a href ='http://www.mountsinai.org/locations/st-lukes'> Mount Sinai St. Luke's Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[2], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[2])
content3<-paste("<b><a href ='www.nyee.edu'> New York Eyes and Ear Infirmary</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[3],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[3])
content4<-paste("<b><a href ='http://www.nyp.org/'> New York Presbyterian Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[4], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[4])
content5<-paste("<b><a href ='https://www.northwell.edu/find-care/locations/lenox-hill-hospital'> Lenox Hill Hospital | Northwell Health</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[5], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[5])
content6<-paste("<b><a href ='http://www.bethisraelny.org/petrie/'> Mount Sinai Beth Israel - Petrie Division</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[6], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[6])
content7<-paste("<b><a href ='http://www.nychealthandhospitals.org/metropolitan/'> NYC Health + Hospitals| Metropolitan</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[7], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[7])
content8<-paste("<b><a href ='http://www.nychealthandhospitals.org/bellevue/'> NYC Health + Hospitals| Bellevue</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[8], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[8])
content9<-paste("<b><a href ='https://profiles.health.ny.gov/hospital/view/103021'> NYU Hospital Center</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[9],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[9])
content10<-paste("<b><a href ='http://www.nychealthandhospitals.org/harlem/'> Harlem Hospital Center</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[10], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[10])
content11<-paste("<b><a href ='https://www.hss.edu/why-choose-hss.asp?gclid=COP0hOaFndICFQ5YDQodKWcJ4Q'> Hospital for Special Surgery</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[11], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[11])
content12<-paste("<b><a href ='https://www.rucares.org/'> The Rockefeller University Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[12], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[12])
hospital_content<-c(content1,content2,content3,content4,content5,content6,content7,content8,content9,content10,content11,content12)
# Plot a default web map (brackets display the result)
(m <- leaflet() %>% addTiles())
img <- readPNG("nyc2013_map_results.png")
grid.raster(img)
# map for the whole new york city
m %>% setView(lng = -73.835242 , lat =  40.740610, zoom = 10)
# map for Manhattan area
m %>% setView(lng = -73.9712 , lat =  40.7831, zoom = 12)
(m2 <- m
%>% # popup
addTiles() %>%
# add som markers:
addMarkers(Manhattan_hospital$Longitude,Manhattan_hospital$Latitude,popup=hospital_content))
library("leaflet")
library("dplyr")
library("png")
library("grid")
filename<-"hospital_manhattan_basic_info1.csv"
Manhattan_hospital<-read.csv(file = filename,header=T)
cost<-c()
for (i in 1:nrow(Manhattan_hospital)){
if (is.na(Manhattan_hospital$Price.Score[i])==FALSE){
if (Manhattan_hospital$Price.Score[i]<0.965){
cost[i]<-"Lower than Average"
}else if(Manhattan_hospital$Price.Score[i]>=0.965 & Manhattan_hospital$Price.Score[i]<=0.9975){
cost[i]<-"About Average"
}else{
cost[i]<-"Above Average"
}
}else{
cost[i]<="NA"
}
}
Manhattan_hospital<-cbind(Manhattan_hospital,cost)
averageWaitingtime<-read.csv("Average_Waitingtime.csv")
averageWaitingtime<-averageWaitingtime$Average.WaitingTime
content1<-paste("<b><a href ='http://www.mountsinai.org'> Mount Sinai Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[1],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[1])
content2<-paste("<b><a href ='http://www.mountsinai.org/locations/st-lukes'> Mount Sinai St. Luke's Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[2], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[2])
content3<-paste("<b><a href ='www.nyee.edu'> New York Eyes and Ear Infirmary</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[3],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[3])
content4<-paste("<b><a href ='http://www.nyp.org/'> New York Presbyterian Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[4], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[4])
content5<-paste("<b><a href ='https://www.northwell.edu/find-care/locations/lenox-hill-hospital'> Lenox Hill Hospital | Northwell Health</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[5], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[5])
content6<-paste("<b><a href ='http://www.bethisraelny.org/petrie/'> Mount Sinai Beth Israel - Petrie Division</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[6], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[6])
content7<-paste("<b><a href ='http://www.nychealthandhospitals.org/metropolitan/'> NYC Health + Hospitals| Metropolitan</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[7], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[7])
content8<-paste("<b><a href ='http://www.nychealthandhospitals.org/bellevue/'> NYC Health + Hospitals| Bellevue</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[8], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[8])
content9<-paste("<b><a href ='https://profiles.health.ny.gov/hospital/view/103021'> NYU Hospital Center</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[9],"<br/>",
"Cost Level: ",Manhattan_hospital$cost[9])
content10<-paste("<b><a href ='http://www.nychealthandhospitals.org/harlem/'> Harlem Hospital Center</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[10], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[10])
content11<-paste("<b><a href ='https://www.hss.edu/why-choose-hss.asp?gclid=COP0hOaFndICFQ5YDQodKWcJ4Q'> Hospital for Special Surgery</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[11], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[11])
content12<-paste("<b><a href ='https://www.rucares.org/'> The Rockefeller University Hospital</a><b>","<br/>",
"Average Waiting Time: ",averageWaitingtime[12], "<br/>",
"Cost Level: ",Manhattan_hospital$cost[12])
hospital_content<-c(content1,content2,content3,content4,content5,content6,content7,content8,content9,content10,content11,content12)
# Plot a default web map (brackets display the result)
(m <- leaflet() %>% addTiles())
img <- readPNG("nyc2013_map_results.png")
grid.raster(img)
# map for the whole new york city
m %>% setView(lng = -73.835242 , lat =  40.740610, zoom = 10)
# map for Manhattan area
m %>% setView(lng = -73.9712 , lat =  40.7831, zoom = 12)
(m2 <- m
%>% # popup
addTiles() %>%
# add som markers:
addMarkers(Manhattan_hospital$Longitude,Manhattan_hospital$Latitude,popup=hospital_content))
runApp()
runApp()
runApp()
runApp()
setwd("~/GitHub/ADS/Spr2017-proj2-grp9/shinyapp")
runApp()
path_source <- 'Outcome of Care Measures.csv'
path_cleaned <- 'outcome.cleaned.RData'
tidy_data <- function() {
csv_df <- read.csv(path_source, colClasses = "character")
for (column in length(csv_df):8) {
if (sum(grepl('[0-9]', csv_df[,column])) == 0) {
print(paste("column", colnames(csv_df[column]), "deleted"))
csv_df[,column] <- NULL
}
}
names(csv_df) <- gsub('\\.', ' ', names(csv_df))
names(csv_df) <- gsub('30 Day', '30-Day', names(csv_df))
names(csv_df) <- gsub('   ', ' - ', names(csv_df))
names(csv_df) <- gsub('Death  Mortality  Rates', 'Mortality Rates', names(csv_df))
hnames <- csv_df$'Hospital Name'
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CENTER', 'M.C.', hnames)
hnames <- gsub('MEDICAL CTR', 'M.C.', hnames)
hnames <- gsub('MED CENTER', 'M.C.', hnames)
hnames <- gsub('MEMORIAL HOSPITAL', 'M.H.', hnames)
hnames <- gsub('HOSPITALS CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITAL CENTER', 'H.C.', hnames)
hnames <- gsub('HOSPITALS', 'H.', hnames)
hnames <- gsub('HOSPITAL', 'H.', hnames)
hnames <- gsub('HEALTH SYSTEM', 'H.S.', hnames)
hnames <- gsub(', THE$', '', hnames)
hnames <- gsub('HEALTHCARE', 'HC.', hnames)
hnames <- gsub('UNIVERSITY', 'UNIV.', hnames)
hnames <- gsub('SYSTEMS', 'S.', hnames)
hnames <- gsub('SYSTEM', 'S.', hnames)
hnames <- gsub('CENTERS', 'C.', hnames)
hnames <- gsub('CENTER', 'C.', hnames)
csv_df$Hospital <- hnames
csv_df
}
save_cleaned_data <- function() {
csv_df <- tidy_data()
save(csv_df, file=path_cleaned)
}
load_cleaned_data <- function() {
if (!file.exists(path_cleaned)) {
parent <- dirname(path_cleaned)
if (!file.exists(parent)) {
dir.create(parent)
}
save_cleaned_data()
}
load(file=path_cleaned)
csv_df
}
csv_df <- load_cleaned_data()
states <- unique(csv_df$State)
columns <- colnames(csv_df[11:(length(csv_df)-1)])
outcomes <- colnames(csv_df[11:(length(csv_df)-1)])
mid <- function(csv_df, nmin, nmax) {
tail(head(csv_df, nmax), nmax - nmin + 1)
}
get_col_index <- function(csv_df, name) {
which(colnames(csv_df) == name)
}
complications<-read.csv("Complications_Manhattan.csv")
new_complications<-as.data.frame(matrix(NA,ncol=length(levels(complications$Measure.Name)),nrow=length(levels(complications$Hospital.Name))))
colnames(new_complications)<-levels(complications$Measure.Name)
colnames(new_complications)
rownames(new_complications)<-levels(complications$Hospital.Name)
for(i in rownames(new_complications)){
for(j in colnames(new_complications)){
new_complications[i,j]=complications$Score[complications$Hospital.Name==i&complications$Measure.Name==j]
}
}
new_complications<-new_complications[,-4]
new_complications<-apply(new_complications,2,order)
rownames(new_complications)<-levels(complications$Hospital.Name)
averageNYCperformance<-rep(6,ncol(new_complications))
new_complications=rbind(new_complications,averageNYCperformance)
runApp()
